<Javascript 기본4>
 함수 >>
  함수를 선언하는 방식은 크게 2종류로 선언식과 표현식이 있다
  
  //함수 선언식 예)
  function sayHello(){ // function 함수이름() { 로직 } 형태로 만듦
    console.log("say Hello");
  }

  //함수 표현식 예)
  const sayHello = function () { // const 변수에다가 값을 넣는것과 같음. 값이 들어가는 자리에 함수를 넣는다는 개념임
    console.log("say Hello!");
  }

 함수 사용 >> 함수를 사용한다는 것은 실행 한다는 것을 의미함. 함수를 실행할 때는 소괄호() 를 붙여야한다. 그러면 함수의 중괄호{}안에 있는 코드들이 실행됨
 예) sayHello(); // say Hello! 가 출력됨

 함수 인자 >> 파라미터 또는 매개변수 라고도 불림
 예) 
  function calculate(x) { //여기서 x를 파라미터(입력값) 이라고 한다
    var result=3*x+5;
    console.log('결과 값은 '+result+'입니다');
  }
  var result=calculate(5); // 결과 값은 20입니다.

 함수 값 반환(return) >> return 키워드를 통해 값을 반환 할 수 있음. 여기서 값은 모든 자료형(string,number,배열,객체) 그리고 함수도 return이 가능함
 예)
 function getProfile(name, age){
  return {
    "name" : name, // 여기서 왼쪽 name은 key가 "name" 인거고 오른쪽 name이 매개변수 name이다
    "age" : age
  }
 }
 ※ 주의 : 함수 내부에서 return을 하게되면 함수를 종료시키는 구문으로 변한다.

  함수 문제 예)
  var products=[{
    name:'농구공',
    description:'농구 황제 마이클 조던이 사용한 농구공입니다',
    price:100000,
    seller:'민수'
  },{
    name:'축구공',
    description:'축구 황제 메시가 사용한 축구공입니다',
    seller:'철수'
  }]

   1. 인자로 배열을 받았을 때 길이를 return하는 함수를 만드시오. 그리고 products를 넣어 실행해보세요.
    // 함수 선언식 방법
    function getProductsLength(array){
        return array.length;
    }

    // 함수 표현식 방법
    const getProductsLength = function(array){
      return array.length
    }

p
   2. product 객체를 넣었었을 때, product의 seller를 반환하는 함수를 만들어 보세요. 그리고 products의 첫번째 값을 넣어 실행해보세요.
    // 함수 선언식 방법
    fucntion getProductsSeller(array){
        return array.seller; //객체 안에 seller에 접근해서 반환
    }

    // 함수 표현식 방법
    const getProductsSeller=function(array){
      return array.seller;
    }
    
    // 출력방법 getProductsSeller(products[0]) 
    // 결과로 "민수" 출력 , products[0]자리에 products[1]를 넣을시 "철수" 출력

<Javascript 기본5>
 <반복문>

 //기본 반복문, 조건이 false가 될때까지 로직을 반복시킴
 for(변수선언; 조건선언; 연산){
    //로직
 }

 //반복문과 배열 접근 예시
 var products=['농구공','축구공];
 for(var i=0; i<products.length; i++){
    var name=products[i] // 배열 products[]에 있는 1번째, 2번째 값을 가져와서 변수 name에 대입함
    console.log(name);
 }

 //반복문 문제 예)
 var products=[{
    name:'농구공',
    description:'농구 황제 마이클 조던이 사용한 농구공입니다',
    price:100000,
    seller:'민수'
  },{
    name:'축구공',
    description:'축구 황제 메시가 사용한 축구공입니다',
    seller:'철수'
  }]
  // products배열을 넣었을때, 그 안에 가격(price)를 순서대로 출력하는 함수를 만들어보세요
  function productsPrice(array){
    const len=array.length;
    for(var i=0; i<len; i++){
        console.log(array[i].price);
    }
  }

 <javgscript 최종문제>
 
 var allProducts = [{
    name:'농구공',
    description:'농구 황제 마이클 조던이 사용한 농구공입니다',
    price:100000,
  },{
    name:'축구공',
    description:'축구 황제 메시가 사용한 축구공입니다',
    price:50000
 },{
    name:'야구공',
    description:'박찬호가 던졌던 야구공입니다',
    price:75000
 }]

 // 1. products 배열을 넣었을 때, 가격이 60000원 이상인 product 객체를 담은 배열을 반환하는 함수를 만들어라.

 function getProducts(products){
    var newProducts=[]; //값을 저장할 빈 배열 생성
    for(var i=0; i<products.length; i++){
        const newProduct=products[i]; //반복문이 실행될때마다 products 객체가 저장됨
        const newPrice=newProduct.price; //객체가 저장된 product의 키 price를 또다른 변수에 대입
        if(newPrice>=60000){
            newProducts.push(newProduct); //배열에 값을 얻을때 .push(값 또는 객체) 키워드를 사용함 
        }
    } 
    return newProducts; //마지막으로 들어간 배열을 return함
 }

