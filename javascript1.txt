<Javascript 기본1>
 코드를 마무리한다는 의미로 맨 마지막에 ;(세미콜론)을 붙여준다. 하지만 안붙여도 문제가 없음
 
변수>
 데이터를 담는 공간, 이 데이터들을 바탕으로 HTML, CSS를 이용해 화면을 보여줌
 변수 선언은 var, let, const 사용함

 변수를 정의 한다는 것 >> 선언된 변수에 값을 넣는 작업을 의미함
 예) var name; // 변수name선언 
     name="그랩" // name이라고 선언된 변수에 "그랩" 이라는 값을 저장함(문자열)

 var 키워드 >> 같은 이름의 변수를 다시 사용할 수 있음(요즘은 잘 사용하지않음)
 예) var num1=20;
     var num1='Bob';
 let 키워드 >> 한번 선언된 변수에 다시 새롭게 선언할 수 없음(값 추가하는 것은 에러가 발생하지 않음) 
 예) let num2=20;
     num2="hello";
     let num2='Bob'; // <- 에러 (선언된 변수를 다시 let으로 선언했기 때문에 오류가 난다)
 const 키워드 >> 상수화, 선언된 변수에 새로운 값을 정의 할 수 없음(변수 값을 더이상 변경하지 않을때 사용)
 예) const num3=30;
     num3='Bob'; // <- 에러!

변수명 규칙>
 변수명은 영문 또는 숫자로 지을수있으나 첫번째글자로 숫자를 넣을 순 없다. 추가로 변수명은 띄어쓰기와 특수문자는 불가능하다(몇몇개는 예외)
  snake case 예) let first_name='bob'
  camel case 예) let firstName='bob'

 ※ 크롬 개발자 도구는 F12, 새로고침 ctrl+r, 줄바꿈 shift+enter

자료형>
 자료형은 데이터형식을 의미함. string(문자), number(숫자), boolean(참/거짓 여부), null(값이 존재하지않음), undefined(변수를 선언하고 정의하지 않은 상태일 때 들어가는 자료형)
 예) var name; //undefined
     name="그랩"; //string(문자)
     var age=27; //number(숫자)
     var isFool=false; //boolean(true,false)
     var nully=null; //null(값존재x)
 자료형을 확인하는 방법 >> typeof 키워드 사용 >> 예)typeof name 입력시 "string" 반환

<Javascript 기본2>
 배열(array) >>
  array(배열)은 object(객체)의 종류 중 하나로, object 자료형이다. array는 배열 또는 리스트(List)라고 불린다.
  배열안의 데이터는 순차적으로 담긴다.

  배열을 사용할때는 [] (대괄호인 Bracket을 사용한다)
  
  배열의 길이를 알려면 >> 배열.length //numberp
   값 반환
  배열 안에 값을 조회하려면 >> 배열[순서번호]
  배열에 새로운 값 추가 >> 배열.push(값)

  예)
  var productNames=['농구공','단백질 보충제'] //array 자료형 [] 정의
  var productIds=[10,20]; // 배열안에 모든 자료형을 넣을 수 있음
  var productNestArray=[[0,1,2],[3,4,5]] // 배열 안에 또 다른 배열도 가능함

  배열에 새로운 값 추가 예시)
  productNames[2]='노션 글'; // array의 3번째에 값을 넣음. 이 방식은 비선호
  articleNames.push('노션 글'); // array의 마지막에 '노션 글' 값을 넣음

 객체(object) >>
  객체는 자료들을 key, value 형태로 저장하는 자료형 이다.
  중괄호 {} 안에 key와 value를 순차적으로 넣음
  예)
  //객체 형태
  {
    key1 : value1,
    key2 : value2,
  }
  //객체 사용
  var product={
    "name": '농구공',
    price : 50000
    description: "그랩이 사용했던 농구공"
  }
  // 여기서 객체를 추가할려면 key : value 형식을 넣으면 된다 아래는 예시
  product["seller"]="그랩"; // key는 "seller" value는 "그랩"
  product.seller="수강생1"; // key는 "seller" value는 "수강생1"

<Javascript 기본3>
 조건문>>
  if(조건) { //조건이 true 이면 로직을 수행함, 만약 조건이 false, null, 0, "", undefined상태 이면 로직을 수행하지 않음
    //로직
  }
  예)
  var name="그랩";
  var age=27;
  if(name==="그랩"){
    console.log("좋은 그랩") // 출력 "좋은 그랩"
  }
  if(name){
    console.log("값") // 출력 "그랩"
  }
  var empty="";
  if(empty){
    console.log("수행될까?") // 로직이 수행되지 않음, empty는 빈 값이기 때문에 false와 비슷한 의미를 가짐
  }

  자바스크립트도 if, else if, else 지원함 >> if문이 false 이면 else if문 실행 >> else if문이 flase이면 else문 실행
 
  조건문 연습문제 >> 
  var products=[{
    name:'농구공',
    description:'농구 황제 마이클 조던이 사용한 공구공',
    price:100000,
  }, {
    name:'축구공',
    description:'축구 황제 메시가 사용한 공구공',
    price:50000,
  }]

  //1. products의 갯수가 1개 이상일때와 아닐때를 나누는 조건문을 짜보세요
    if(products.length>=1){
        console.log('상품들을 보여주는 코드');
    }
    else{
        console.log('상품 준비중 화면을 보여주는 코드');
    }
  //2. products의 갯수가 5개 이상일 때, 1~4개 사이일 때, 0개일때 조건문을 짜보세요
    if(products.length>=5){
        console.log('상품이 참 많네');
    } else if(products.length>=1){
        console.log('상품 1~4개 사이.');
    } else {
        console.log('상품 준비중');
    }